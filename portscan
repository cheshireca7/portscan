#!/bin/bash

trap k SIGINT

d=1; t=1
k(){ [[ -z $ips ]] && echo -e '\n[\033[34mI\033[0m] Input AWOL!' || echo -e '\n[\033[34mI\033[0m] Results in '$PWD'/portscan_results'; exit; }
s(){ seq $2 $3 | shuf | xargs -P$t -I{} bash -c $'timeout 1 bash -c \'</dev/tcp/\'$1\'/{}\' &>/dev/null && echo $1\':{} open\' || echo $1\':{} closed\'; sleep $2' _ $1 $d | tee -a portscan_results/${1}_${e}; };
v(){ [[ $1 =~ $ir ]] && return 0 || (host -T $1 $r &>/dev/null && return 0 || echo -e '[\033[31mE\033[0m] Failed to resolve '$1; return 1); }
p(){ for h in $(printf "%s\n" "${ips[@]}" | shuf); do v $h && for p in $(echo "${1//,/$'\n'}" | shuf); do ([[ $p =~ $pr ]] && s $h ${p%-*} ${p##*-}) || s $h $p $p; done; done; k; }
u(){ echo -e "~ Bash Port Scanner\nUsage: $0 [-d delay] [-r resolver] [-t threads] <ports>\nExample: echo scanme.nmap.org | $0 22,80,443" && exit 1; }
while getopts "d:t:r:" opt; do case $opt in d) d=$OPTARG ;; r) r=$OPTARG ;; t) t=$OPTARG ;; *) u;; esac; done; shift $((OPTIND -1))

a=$1; e=$(date "+%d%m%Y_%H%M%S")
ips=$(cat -); [[ -z $ips ]] && u
pr='^[0-9]{1,5}-[0-9]{1,5}$'
ar='^[0-9]{1,5}(,[0-9]{1,5}|(-[0-9]{1,5}))?*$'
ir='^((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})$'
[[ ! -d $PWD/portscan_results ]] && mkdir $PWD/portscan_results
[[ -z $r ]] && echo -e "[\033[1;33mW\033[0m] No DNS specified. System DNS will be used!"
[[ -z $a ]] && a='20-25,53,79,80,81,88,110,111,135,139,143,389,443,445,500,636,1433,1521,1723,2049,2121,3128,3268,3269,3306,3389,3690,4500,5432,5900,5985,6666-6669,8000,8008,8080,8443,8888,9100,9389,9999,10000,47001' || [[ $a =~ $ar ]] && p $a || u
